;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(set-variable-value-history ido-file-history minibuffer-history))
(setq set-variable-value-history '("t" "nil"))
(setq ido-file-history '("hello.py~" "hellos.py" "hello.py~"))
(setq minibuffer-history '("backup-by-copying" "set-variable" "backup-by-copying" "set-variable" "backup-by-copying" "set-variable" "/usr/bin/python -i " "/usr/bin/python test.py" "/usr/bin/python -ipython test	" "/usr/bin/python -i" "/usr/bin/python -i python"))
(setq search-ring '("pip" "compan" "comple" "auto"))
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("
print(\"helloxx world\")
print(\"hello zhang\")
print(\"test\")
print(\"test bb\")" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-string-face syntax-table (15) fontified t) 8 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face syntax-table (15) fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (face font-lock-string-face syntax-table (15) fontified t) 31 42 (face font-lock-string-face fontified t) 42 43 (face font-lock-string-face syntax-table (15) fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 50 (face font-lock-keyword-face fontified t) 50 51 (fontified t) 51 52 (face font-lock-string-face syntax-table (15) fontified t) 52 56 (face font-lock-string-face fontified t) 56 57 (face font-lock-string-face syntax-table (15) fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 66 (face font-lock-string-face syntax-table (15) fontified t) 66 73 (face font-lock-string-face fontified t) 73 74 (face font-lock-string-face syntax-table (15) fontified t) 74 75 (fontified t)) #("(setq backup-by-copying nil)" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face))) #("(\"helloxx world\")
print(\"hello zhang\")
" 0 1 (fontified t) 1 2 (fontified t syntax-table (15) face font-lock-string-face) 2 15 (fontified t face font-lock-string-face) 15 16 (fontified t syntax-table (15) face font-lock-string-face) 16 18 (fontified t) 18 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t) 24 25 (fontified t syntax-table (15) face font-lock-string-face) 25 36 (fontified t face font-lock-string-face) 36 37 (fontified t syntax-table (15) face font-lock-string-face) 37 39 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("    print(\"hello world\\n\")
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (syntax-table (15) fontified t face font-lock-string-face) 11 24 (fontified t face font-lock-string-face) 24 25 (syntax-table (15) fontified t face font-lock-string-face) 25 26 (fontified t) 26 27 (fontified t)) #("
    " 0 1 (fontified t) 1 5 (fontified t)) #("    print(\"\")
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t syntax-table (15) face font-lock-string-face) 11 12 (fontified t syntax-table (15) face font-lock-string-face) 12 13 (fontified t) 13 14 (fontified t)) #("
    " 0 1 (fontified t) 1 5 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("







    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 12 (fontified t)) #("setq company    " 0 4 (fontified t) 4 12 (fontified t) 12 16 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t))))
